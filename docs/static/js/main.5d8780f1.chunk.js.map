{"version":3,"sources":["components/Character.js","components/CharacterList.js","images/logoRM.png","components/Header.js","components/Filter.js","services/getDataFromApi.js","components/App.js","reportWebVitals.js","index.js"],"names":["Character","props","className","src","character","image","alt","name","title","species","CharacterList","characterItems","characters","map","id","Header","role","logoHeader","Filter","htmlFor","type","getDataFromApi","fetch","then","response","json","data","results","status","origin","episodes","episode","length","App","useState","setCharacters","useEffect","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAkBeA,G,MAfG,SAACC,GACjB,OACE,qBAAIC,UAAU,YAAd,UACE,qBACEA,UAAU,iBACVC,IAAKF,EAAMG,UAAUC,MACrBC,IAAKL,EAAMG,UAAUG,KACrBC,MAAOP,EAAMG,UAAUG,OAEzB,oBAAIL,UAAU,kBAAd,SAAiCD,EAAMG,UAAUG,OACjD,mBAAGL,UAAU,qBAAb,SAAmCD,EAAMG,UAAUK,eCG1CC,G,MAZO,SAACT,GACrB,IAAMU,EAAiBV,EAAMW,WAAWC,KAAI,SAACT,GAC3C,OAAO,cAAC,EAAD,CAA8BA,UAAWA,GAAzBA,EAAUU,OAGnC,OACE,yBAASZ,UAAU,uBAAnB,SACE,oBAAIA,UAAU,kBAAd,SAAiCS,QCXxB,MAA0B,mCCiB1BI,G,MAbA,WACb,OACE,wBAAQb,UAAU,SAASc,KAAK,SAAhC,SACE,qBACEd,UAAU,eACVC,IAAKc,EACLX,IAAI,sBACJE,MAAM,6CCECU,EAXA,WACb,OACE,qCACE,uBAAOhB,UAAU,mBAAmBiB,QAAQ,OAA5C,0CAGA,uBAAOjB,UAAU,mBAAmBkB,KAAK,OAAOb,KAAK,OAAOO,GAAG,aCYtDO,G,MApBQ,WACrB,OAAOC,MACL,uFAECC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,EAAKC,QAAQd,KAAI,SAACT,GACvB,MAAO,CACLU,GAAIV,EAAUU,GACdP,KAAMH,EAAUG,KAChBE,QAASL,EAAUK,QACnBmB,OAAQxB,EAAUwB,OAClBvB,MAAOD,EAAUC,MACjBwB,OAAQzB,EAAUyB,OAAOtB,KACzBuB,SAAU1B,EAAU2B,QAAQC,gBCSvBC,EAfH,WAAO,IAAD,EACoBC,mBAAS,IAD7B,mBACTtB,EADS,KACGuB,EADH,KAMhB,OAJAC,qBAAU,WACRf,IAAiBE,MAAK,SAACG,GAAD,OAAUS,EAAcT,QAC7C,IAGD,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CAAed,WAAYA,QCNlByB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5d8780f1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../stylesheets/layout/_character.scss\";\r\n\r\nconst Character = (props) => {\r\n  return (\r\n    <li className=\"character\">\r\n      <img\r\n        className=\"character__img\"\r\n        src={props.character.image}\r\n        alt={props.character.name}\r\n        title={props.character.name}\r\n      />\r\n      <h2 className=\"character__name\">{props.character.name}</h2>\r\n      <p className=\"character__species\">{props.character.species}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Character from \"./Character\";\r\nimport \"../stylesheets/layout/_characterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterItems = props.characters.map((character) => {\r\n    return <Character key={character.id} character={character} />;\r\n  });\r\n\r\n  return (\r\n    <section className=\"character__container\">\r\n      <ul className=\"character__list\">{characterItems}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/logoRM.de13d484.png\";","import React from \"react\";\r\nimport logoHeader from \"../images/logoRM.png\";\r\nimport \"../stylesheets/layout/_header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\" role=\"banner\">\r\n      <img\r\n        className=\"header__logo\"\r\n        src={logoHeader}\r\n        alt=\"Rick and Morty Logo\"\r\n        title=\"Rick and Morty search your character\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst Filter = () => {\r\n  return (\r\n    <>\r\n      <label className=\"form__title-name\" htmlFor=\"name\">\r\n        Â¿Who are you looking for?\r\n      </label>\r\n      <input className=\"form__input-text\" type=\"text\" name=\"name\" id=\"name\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","const getDataFromApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          status: character.status,\r\n          image: character.image,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\nimport CharacterList from \"./CharacterList\";\nimport Header from \"./Header\";\nimport Filter from \"./Filter\";\nimport \"../stylesheets/App.scss\";\nimport { useEffect, useState } from \"react\";\nimport getDataFromApi from \"../services/getDataFromApi\";\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  return (\n    <>\n      <Header />\n      <Filter />\n      <CharacterList characters={characters} />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}