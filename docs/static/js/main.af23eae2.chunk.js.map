{"version":3,"sources":["services/getDataFromApi.js","components/Character.js","components/CharacterList.js","images/logoRM.png","components/Header.js","components/Filter.js","images/icon_back.png","components/CharacterDetail.js","components/App.js","reportWebVitals.js","index.js"],"names":["getDataFromApi","fetch","then","response","json","data","results","map","character","id","name","species","status","image","origin","episodes","episode","length","Character","props","className","to","title","src","alt","CharacterList","characterItems","characters","Header","role","logoHeader","Filter","htmlFor","type","placeholder","onChange","ev","handleFilter","value","target","key","CharacterDetail","iconBack","App","useState","setCharacters","characterFilter","setCharacterFilter","useEffect","filteredCharacters","filter","toUpperCase","includes","filterCharacters","exact","path","render","characterName","match","params","foundCharacter","find","undefined","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.af23eae2.chunk.js","sourcesContent":["const getDataFromApi = () => {\r\n  return fetch(\r\n    \"https://raw.githubusercontent.com/Adalab/rick-y-morty/master/data/rick-y-morty.json\"\r\n  )\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      return data.results.map((character) => {\r\n        return {\r\n          id: character.id,\r\n          name: character.name,\r\n          species: character.species,\r\n          status: character.status,\r\n          image: character.image,\r\n          origin: character.origin.name,\r\n          episodes: character.episode.length,\r\n        };\r\n      });\r\n    });\r\n};\r\n\r\nexport default getDataFromApi;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/_character.scss\";\r\n\r\nconst Character = (props) => {\r\n  return (\r\n    <li className=\"character\">\r\n      <Link\r\n        /* target=\"_blank\" */\r\n        to={`/character/${props.character.name}`}\r\n        title=\"Ver detalle del personaje\"\r\n      >\r\n        <img\r\n          className=\"character__img\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n          title={props.character.name}\r\n        />\r\n        <h2 className=\"character__name\">{props.character.name}</h2>\r\n        <p className=\"character__species\">{props.character.species}</p>\r\n      </Link>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default Character;\r\n","import React from \"react\";\r\nimport Character from \"./Character\";\r\nimport \"../stylesheets/layout/_characterList.scss\";\r\n\r\nconst CharacterList = (props) => {\r\n  const characterItems = props.characters.map((character) => {\r\n    return <Character key={character.id} character={character} />;\r\n  });\r\n\r\n  return (\r\n    <section className=\"character__container\">\r\n      <ul className=\"character__list\">{characterItems}</ul>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default CharacterList;\r\n","export default __webpack_public_path__ + \"static/media/logoRM.de13d484.png\";","import React from \"react\";\r\nimport logoHeader from \"../images/logoRM.png\";\r\nimport \"../stylesheets/layout/_header.scss\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header className=\"header\" role=\"banner\">\r\n      <img\r\n        className=\"header__logo\"\r\n        src={logoHeader}\r\n        alt=\"Rick and Morty Logo\"\r\n        title=\"Rick and Morty search your character\"\r\n      />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"../stylesheets/layout/_filter.scss\";\r\n\r\nconst Filter = (props) => {\r\n  const handleChange = (ev) => {\r\n    props.handleFilter({\r\n      value: ev.target.value,\r\n      key: \"character\",\r\n    });\r\n  };\r\n  return (\r\n    <form className=\"form\">\r\n      <label className=\"form__title-name\" htmlFor=\"name\">\r\n        Â¿Who are you looking for?\r\n      </label>\r\n      <input\r\n        className=\"form__input-text\"\r\n        type=\"text\"\r\n        name=\"name\"\r\n        id=\"name\"\r\n        placeholder=\"Search here: Beth Smith\"\r\n        onChange={handleChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","export default __webpack_public_path__ + \"static/media/icon_back.8b0e3ad4.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../stylesheets/layout/_characterDetail.scss\";\r\nimport iconBack from \"../images/icon_back.png\";\r\n\r\nconst CharacterDetail = (props) => {\r\n  return (\r\n    <>\r\n      <article className=\"article\">\r\n        <img\r\n          className=\"article__img\"\r\n          src={props.character.image}\r\n          alt={props.character.name}\r\n        />\r\n        <li>\r\n          <h2 className=\"article__name\">{props.character.name}</h2>\r\n          <p className=\"article__status\">Status: {props.character.status}</p>\r\n          <p className=\"article__species\">Species: {props.character.species}</p>\r\n          <p className=\"article__origin\">Origin: {props.character.origin}</p>\r\n          <p className=\"article__episodes\">\r\n            Episodes: {props.character.episodes}\r\n          </p>\r\n        </li>\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"article__back\"\r\n            src={iconBack}\r\n            alt=\"back\"\r\n            title=\"Back to characters list \"\r\n          />\r\n        </Link>\r\n      </article>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CharacterDetail;\r\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport getDataFromApi from \"../services/getDataFromApi\";\nimport CharacterList from \"./CharacterList\";\nimport Header from \"./Header\";\nimport Filter from \"./Filter\";\nimport CharacterDetail from \"./CharacterDetail\";\nimport \"../stylesheets/App.scss\";\n\nconst App = () => {\n  // states\n\n  const [characters, setCharacters] = useState([]);\n  const [characterFilter, setCharacterFilter] = useState(\"\");\n\n  // api\n\n  useEffect(() => {\n    getDataFromApi().then((data) => setCharacters(data));\n  }, []);\n\n  // event handlers\n\n  const handleFilter = (data) => {\n    setCharacterFilter(data.value);\n  };\n\n  const filteredCharacters = characters.filter((character) => {\n    return character.name.toUpperCase().includes(characterFilter.toUpperCase());\n  });\n\n  const filterCharacters =\n    filteredCharacters.length > 0 ? (\n      <CharacterList characters={filteredCharacters} />\n    ) : (\n      <p className=\"form__notFound\">\n        {`Upps! There are no characters with the word  ${characterFilter}. Try another!`}\n      </p>\n    );\n\n  const renderCharacterDetail = (props) => {\n    const characterName = props.match.params.name;\n    const foundCharacter = characters.find((character) => {\n      return character.name === characterName;\n    });\n    if (foundCharacter !== undefined) {\n      return <CharacterDetail character={foundCharacter} />;\n    } else {\n      return <p className=\"url_norFound\">Not a valid URL</p>;\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Filter handleFilter={handleFilter} />\n      <Switch>\n        <Route exact path=\"/\">\n          {filterCharacters}\n        </Route>\n        <Route path=\"/character/:name\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport \"./stylesheets/index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}